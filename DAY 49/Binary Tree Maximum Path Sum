124. Binary Tree Maximum Path Sum





class Solution {
    public int maxPathSum(TreeNode root) {
        int maxvalue[]=new int[1];
        maxvalue[0]=Integer.MIN_VALUE;
        maxpathsum(root, maxvalue);
        return maxvalue[0];  //return the max value
    }
   int maxpathsum(TreeNode root, int maxvalue[])
   {
       if(root==null) return 0;
       int lf=Math.max(0,maxpathsum(root.left, maxvalue));  //if there is negetive node it will assign as 0
       int rh=Math.max(0,maxpathsum(root.right, maxvalue));
       maxvalue[0]=Math.max(maxvalue[0], root.val+lf+rh);  //calculate the maxvalue
       return Math.max(lf,rh)+root.val;
   }
}



Time Complexity= O(N)
Space Complexity=O(N)
