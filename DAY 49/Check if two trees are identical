

100. Same Tree



CODE::


class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p==null|| q==null ) return p==q;
        return ((p.val==q.val) && isSameTree(p.left,q.left)&& isSameTree(p.right,q.right));
    }
}


Time Complexity= O(N)   Reason: We are doing a tree traversal.
Space Compexity= O(N)   Reason: Space is needed for the recursion stack. In the worst case (skewed tree), space complexity can be O(N).
