Implement Lower Bound



BRUTE FORCE::

public class Solution {
    public static int lowerBound(int []arr, int n, int x) {
        for(int i=0;i<n;i++)
        {
            if(arr[i]>=x) return i;
        }
        return n;
    }
}


Time Complexity: O(N)
Space Complexity: O(1)


OPTIMAL::

public class Solution {
    public static int lowerBound(int []arr, int n, int x) {
       int low=0;
       int high=n-1;
       int ans=n;
       while(low<=high)
       {
           int mid= low+ (high-low)/2;
           if(arr[mid]>=x) 
           {
               ans=mid;
               high=mid-1;
           }
           else
           {
               low=mid+1;
           }
       }
       return ans;
       
    }
}

Time Complexity: O(logN), where N = size of the given array.
Reason: We are basically using the Binary Search algorithm.

Space Complexity: O(1) as we are using no extra space.


