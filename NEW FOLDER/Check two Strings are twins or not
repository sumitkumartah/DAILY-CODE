
Check two Strings are twins or not 




BRUTE FORCE:::



import java.util.*;

class HelloWorld {
    public static void main(String[] args) {
    
       Scanner sc= new Scanner(System.in);
       System.out.print("Enter the first string : ");
       String s=sc.nextLine();
       
       System.out.print("Enter the second string  : ");
       String t=sc.nextLine();
       
       System.out.println(" Both strings are twins  "+ solve(s, t));
              
    }
    
    public static boolean solve(String s, String t)
    {
        Map<Character, Integer> mpp1=new HashMap<>();
        for(char ch:s.toCharArray())
        {
            mpp1.put(ch, mpp1.getOrDefault(ch, 0)+1);
        }
        
        Map<Character, Integer> mpp2=new HashMap<>();
         for(char ch:t.toCharArray())
        {
            mpp2.put(ch, mpp2.getOrDefault(ch, 0)+1);
        }
        
        for(char ch:t.toCharArray())
        {
            if(mpp1.get(ch)!=mpp2.get(ch))
            {
                return false;
            }
            
        }
        return true;
    }
}





TC : - O(N+M); N is the size of first string ; M is the size of second string ; 

SC: - O(constant) -> O(1) 


______________________________________________________________________________________________________________________________________________________________________


Actual problem for even and odd indexes



import java.util.*;

class HelloWorld {
    public static void main(String[] args) {
    
       Scanner sc= new Scanner(System.in);
       System.out.print("Enter the size of the array  : ");
       int n=sc.nextInt();
       String arr1[]=new String[n];
       System.out.print("Enter the  strings : ");
      for(int i=0;i<n;i++){
       arr1[i] = sc.nextLine();
      }
       
       
        System.out.print("Enter the size of the array  : ");
        int m=sc.nextInt();
       String arr2[]=new String[m];
       System.out.print("Enter the  strings : ");
       
      for(int i=0;i<m;i++){
       arr2[i] = sc.nextLine();
      }
      
     for(int i=0; i<n && i<m; i++) {
           if(solve(arr1[i], arr2[i])) {
               System.out.println("Both strings are twins");
           } else {
               System.out.println("False");
           }
      }
              
    }
    
    public static boolean solve(String s, String t)
    {
        Map<Character, Integer> mpp1=new HashMap<>();
        Map<Character, Integer> mpp2=new HashMap<>();
        Map<Character, Integer> mpp3=new HashMap<>();
        Map<Character, Integer> mpp4=new HashMap<>();
        for(int i=0;i<s.length();i++)
        {
           if(i%2==0)
           {
                mpp1.put(s.charAt(i), mpp1.getOrDefault(s.charAt(i), 0)+1);
           }
           else{
               mpp2.put(s.charAt(i), mpp2.getOrDefault(s.charAt(i), 0)+1);
           }
        }
        
      
          for(int i=0;i<t.length();i++)
        {
           if(i%2==0)
           {
                mpp3.put(t.charAt(i), mpp3.getOrDefault(t.charAt(i), 0)+1);
           }
           else{
               mpp4.put(t.charAt(i), mpp4.getOrDefault(t.charAt(i), 0)+1);
           }
        }
        
     return equal(mpp1, mpp3) && equal(mpp2, mpp4);
    }

    
    public static boolean equal(Map<Character, Integer> mpp1, Map<Character, Integer> mpp2) {
        for (char ch = 'a'; ch <= 'z'; ch++) {
            if (mpp1.getOrDefault(ch, 0) != mpp2.getOrDefault(ch, 0)) {
                return false;
            }
        }
        return true;
    }
}




Enter the size of the array  : 2
Enter the  strings : cdab dcba
Enter the size of the array  : 2
Enter the  strings : abcd abcd
Both strings are twins
False

=== Code Execution Successful ===



 TC : -> O(Sum of length of all the strings)
SC : -> O(Constant) -> O(1)
