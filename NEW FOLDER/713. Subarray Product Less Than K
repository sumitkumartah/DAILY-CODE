713. Subarray Product Less Than K



CODE::

class Solution {
    public int numSubarrayProductLessThanK(int[] nums, int k) {
        int cnt = 0;
        for (int i = 0; i < nums.length; i++) {
            int product = 1;
            for (int j = i; j < nums.length; j++) {
                product *= nums[j];
                if (product < k)
                    cnt++;
                else
                    break;
            }
        }
        return cnt;
    }
}



TC= O(N^2) 
SC=O(1)




class Solution {
    public int numSubarrayProductLessThanK(int[] nums, int k) {
        if(k<=1) return 0;

        int left=0;
        int right=0;
        int product=1;
        int ans=0;
        while(right<nums.length)
        {
            product*=nums[right];
            while(product>=k) 
            {
                product/=nums[left];
                left++;
            }
            ans+=1+(right-left);
            right++;
        }
        return ans;
    }
}


TC=O(N)
SC=O(1)


