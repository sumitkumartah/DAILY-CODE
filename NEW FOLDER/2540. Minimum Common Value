2540. Minimum Common Value


BRUTE force >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>by using Map

class Solution {
    public int getCommon(int[] nums1, int[] nums2) {
        Map<Integer, Boolean> mpp=new HashMap<>();
      for(int i=0;i<nums1.length;i++)
      {
           mpp.put(nums1[i], true);
      }

      //check in nums2[] is the el is there
      for(int i=0;i<nums2.length;i++)
      {
         if(mpp.containsKey(nums2[i]))
         {
             return nums2[i];
         }
      }
      return -1;
    }
}

Time Complexity: O(n + m)
Space Complexity: O(n)



OPTIMAL: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>by using two pointer approach

class Solution {
    public int getCommon(int[] nums1, int[] nums2) {
        int i=0;
        int j=0;
        while(i<nums1.length   &&  j<nums2.length)
        {
            if(nums1[i]==nums2[j]) {
                return nums1[i];
            }
            else if(nums1[i]<nums2[j]){
                i++;
            }
            else{
                j++;
            }
        }
        return -1;
    }
}

Time Complexity: O(n + m)
Space Complexity: O(1)


