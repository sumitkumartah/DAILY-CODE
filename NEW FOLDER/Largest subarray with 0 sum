Largest subarray with 0 sum

https://www.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1


class GfG {
    int maxLen(int arr[], int n) {
        int sum = 0;
        int longest_length = 0;
        HashMap<Integer, Integer> mpp = new HashMap<>();

        for (int i = 0; i < n; i++) {
            sum += arr[i]; // Fixed: Changed A to arr
            
            if (sum == 0) {  // IF SUM IS 0 AT ANY MOMENT THEN  from O to i will be the length
                longest_length = Math.max(longest_length, i + 1);
            } else {
                if (mpp.containsKey(sum)) {
                    longest_length = Math.max(longest_length, i - mpp.get(sum));
                } else {
                    mpp.put(sum, i);
                }
            }
        }
        return longest_length;
    }
}

TC= O(N) // beacuse we traverse the entire array one time and for insert in the map/ find in the map compexity is O(1)
sc=O(N)  // for hashmap
