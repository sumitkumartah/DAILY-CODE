41. First Missing Positive




CODE::


class Solution {
    public int firstMissingPositive(int[] nums) {
        int i=0;
        int n=nums.length;
        while(i<n){
            int curr=nums[i]-1;
            if(nums[i]>0 && nums[i]<=n  && nums[i]!=nums[curr])
            {
                swap(nums, i, curr);
            }
            else{
                i++;
            }
        }

        for(i=0;i<n;i++){
            if(nums[i]!=i+1){
                return i+1;
            }
        }
        return n+1;
    }

    public void swap(int arr[], int i, int j){
        arr[i]=arr[i]^ arr[j];
        arr[j]=arr[i]^ arr[j];
        arr[i]=arr[i]^ arr[j];
    }
}


Time complexity=O(N)
Sc=O(1)
