454. 4Sum II


BRUTE FORCE::

class Solution {
    public int fourSumCount(int[] nums1, int[] nums2, int[] nums3, int[] nums4) {
        int cnt=0;
        for(int i=0;i<nums1.length;i++)
        {
            for(int j=0;j<nums2.length;j++)
            {
                for(int k=0;k<nums3.length;k++)
                {
                    for(int l=0;l<nums4.length;l++)
                    {
                        if(nums1[i]+nums2[j]+nums3[k]+nums4[l]==0)
                        {
                            cnt++;
                        }
                    }
                }
            }
        }
        return cnt;
    }
}


TC=O(N^4)
SC=O(1)







_______________________________________________________________________________________________________________________________________________________________________






OPTIMAL::



class Solution {
    public int fourSumCount(int[] nums1, int[] nums2, int[] nums3, int[] nums4) {
        Map<Integer, Integer> mpp=new HashMap<>();
        for(int i=0;i<nums1.length;i++)
        {
            for(int j=0;j<nums2.length;j++)
            {
                mpp.put(nums1[i]+nums2[j] , mpp.getOrDefault(nums1[i]+nums2[j], 0)+1);
            }
        }

       int sum=0;
       int cnt=0;
        for(int i=0;i<nums3.length;i++)
        {
            for(int j=0;j<nums4.length;j++)
            {
              sum=nums3[i]+nums4[j];
              if(mpp.containsKey(-sum))
              {
                cnt+=mpp.get(-sum);
              }
            }
        }
        return cnt;
    }
}



TC=O(n^2) +O(n^2)
Sc=O(N)













