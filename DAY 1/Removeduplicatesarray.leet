//26. Remove Duplicates from Sorted Array

//BRUTE FORCE:

class Solution {
    public int removeDuplicates(int[] nums) {
    LinkedHashSet<Integer> set = new LinkedHashSet<>();

        for(int i = 0; i < nums.length; i++){
            set.add(nums[i]);
        }
        //copy unique element back to array
        int i = 0;

        for(int ele:set){
            nums[i++] = ele;
        }
        return set.size();
    }
}

//Time complexity: O(n)

//Space Complexity: O(n) 



OPTIMAL::

class Solution {
    int remove_duplicate(int A[],int N){
        // code here
        int i=0;  
        for(int j=1;j<N;j++)
        {
            if(A[i]!=A[j]) 
            {
                A[i]=A[j];
                i++;
            }
        }
        return i+1;
        
    }
}

//TC=O(N)
//SC=O(1)
