
236. Lowest Common Ancestor of a Binary Tree



class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
         if(root==null || root==p || root==q)
         {
             return root;  // if root node is null or root node is p or root node is q
         }
         TreeNode left=lowestCommonAncestor( root.left, p, q);
         TreeNode right= lowestCommonAncestor( root.right, p, q);
         if(left==null) return right;  // if left part is null return the right element
         if (right==null)return left; //if right part is null return left element
         else {
             return root;  // if left==p && right==q then return the root
         }
    }
}


Time Complexity= O(N)
Space Complexity= O(N)
