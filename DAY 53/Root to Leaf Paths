Root to Leaf Paths



CODE::


class Tree{
    
    public static void path(Node root, ArrayList<ArrayList<Integer>> ans,ArrayList<Integer> sublist)
    {
        if(root==null)return;
        sublist.add(root.data);
        if(isLeaf(root)){
         ans.add(new ArrayList<>(sublist));
        }
        path(root.left,ans,sublist);
        path(root.right,ans,sublist);
        sublist.remove(sublist.size()-1);   //for backtracking
    }
    public static boolean isLeaf(Node root) {
        return (root.left == null && root.right == null);
    }
    public ArrayList<ArrayList<Integer>> Paths(Node root){
      ArrayList<ArrayList<Integer>> ans=new ArrayList<>();
      if(root==null)return ans;
      ArrayList<Integer> sublist=new ArrayList<>();
      path(root, ans, sublist);
      return ans;
        
    }
    
}


Time Complexity= O(N)
Space Complexity=O(H)
