
107. Binary Tree Level Order Traversal II

CODE:

class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) return ans;
        
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        
        while (!q.isEmpty()) {
            int levelSize = q.size();
            List<Integer> temp = new ArrayList<>();
            
            for (int i = 0; i < levelSize; i++) {
                TreeNode node = q.poll();
                temp.add(node.val);
                
                if (node.left != null) q.add(node.left);
                if (node.right != null) q.add(node.right);
            }
            
            ans.add(0,temp);
        }
        
       return ans;
    }
}


Time Complexity= O(N)
Space Complexity=O(N)
